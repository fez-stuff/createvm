---
- name: Update RAM of a VM on OpenShift Virtualization (fetch-modify-replace with safe nested update)
  hosts: localhost
  gather_facts: no
  collections:
    - kubernetes.core

  vars:
    namespace: linux-vm
    vm_name: fedora-vm
    new_memory: "4Gi"

  tasks:
    - name: Get current VM definition
      k8s_info:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        namespace: "{{ namespace }}"
        name: "{{ vm_name }}"
      register: vm_info

    - name: Stop the VM before editing
      k8s:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        name: "{{ vm_name }}"
        namespace: "{{ namespace }}"
        definition:
          spec:
            running: false

    - name: Extract VM spec.template.spec.domain
      set_fact:
        domain_spec: "{{ vm_info.resources[0].spec.template.spec.domain }}"

    - name: Update memory in domain spec
      set_fact:
        updated_domain_spec: "{{ domain_spec | combine({'resources': {'requests': {'memory': new_memory}}}, recursive=True) }}"

    - name: Update spec.template.spec with new domain spec
      set_fact:
        updated_spec_template_spec: "{{ vm_info.resources[0].spec.template.spec | combine({'domain': updated_domain_spec}, recursive=True) }}"

    - name: Update spec.template with new spec
      set_fact:
        updated_spec_template: "{{ vm_info.resources[0].spec.template | combine({'spec': updated_spec_template_spec}, recursive=True) }}"

    - name: Update spec with new template
      set_fact:
        updated_spec: "{{ vm_info.resources[0].spec | combine({'template': updated_spec_template}, recursive=True) }}"

    - name: Prepare updated VM definition
      set_fact:
        updated_vm: "{{ vm_info.resources[0] | combine({'spec': updated_spec}, recursive=True) }}"

    - name: Apply updated VM definition
      k8s:
        state: present
        definition: "{{ updated_vm }}"

    - name: Start the VM again
      k8s:
        api_version: kubevirt.io/v1
        kind: VirtualMachine
        name: "{{ vm_name }}"
        namespace: "{{ namespace }}"
        definition:
          spec:
            running: true
